// <auto-generated />
using System;
using ConManApp.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConManApp.Migrations
{
    [DbContext(typeof(MojDBCOntext))]
    partial class MojDBCOntextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConManApp.EnModels.Administracija", b =>
                {
                    b.Property<int>("UposlenikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktBroj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrucnoZvanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UredId")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UposlenikId");

                    b.HasIndex("UredId");

                    b.ToTable("Administracija");
                });

            modelBuilder.Entity("ConManApp.EnModels.Dobavljac", b =>
                {
                    b.Property<int>("DobavljacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GodinaOsnivanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DobavljacId");

                    b.ToTable("Dobavljac");
                });

            modelBuilder.Entity("ConManApp.EnModels.Drzava", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("ConManApp.EnModels.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("ConManApp.EnModels.GrupaMaterijal", b =>
                {
                    b.Property<int>("GrupaMaterijalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JedinicaMjere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivGrupe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OznakaJediniceMjere")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GrupaMaterijalId");

                    b.ToTable("GrupaMaterijal");
                });

            modelBuilder.Entity("ConManApp.EnModels.Materijal", b =>
                {
                    b.Property<int>("MaterijalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cijena")
                        .HasColumnType("real");

                    b.Property<int>("DobavljacId")
                        .HasColumnType("int");

                    b.Property<int>("GrupaMaterijalId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Potrosen")
                        .HasColumnType("bit");

                    b.Property<int>("SkladisteId")
                        .HasColumnType("int");

                    b.HasKey("MaterijalId");

                    b.HasIndex("DobavljacId");

                    b.HasIndex("GrupaMaterijalId");

                    b.HasIndex("SkladisteId");

                    b.ToTable("Materijal");
                });

            modelBuilder.Entity("ConManApp.EnModels.Narudzba", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpisakPotrebnihMaterijala")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("NarudzbaId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("Narudzba");
                });

            modelBuilder.Entity("ConManApp.EnModels.Oprema", b =>
                {
                    b.Property<int>("OpremaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("JeIznajmljeno")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkladisteId")
                        .HasColumnType("int");

                    b.Property<bool>("usable")
                        .HasColumnType("bit");

                    b.HasKey("OpremaId");

                    b.HasIndex("SkladisteId");

                    b.ToTable("Oprema");
                });

            modelBuilder.Entity("ConManApp.EnModels.PlatnaLista", b =>
                {
                    b.Property<int>("PlatnaListaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.Property<string>("godina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mjesec")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlatnaListaId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("PlatnaLista");
                });

            modelBuilder.Entity("ConManApp.EnModels.PlatnaPoslovodja", b =>
                {
                    b.Property<int>("PlatnaPoslovodjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IznosPlate")
                        .HasColumnType("int");

                    b.Property<int>("PlatnaListaId")
                        .HasColumnType("int");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("PlatnaPoslovodjaId");

                    b.HasIndex("PlatnaListaId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("PlatnaPoslovodja");
                });

            modelBuilder.Entity("ConManApp.EnModels.PlatnaRadnik", b =>
                {
                    b.Property<int>("PlatnaRadnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IznosPlate")
                        .HasColumnType("int");

                    b.Property<int>("PlatnaListaId")
                        .HasColumnType("int");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("PlatnaRadnikId");

                    b.HasIndex("PlatnaListaId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("PlatnaRadnik");
                });

            modelBuilder.Entity("ConManApp.EnModels.PlatnaSkladistar", b =>
                {
                    b.Property<int>("PlatnaSkladistarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IznosPlate")
                        .HasColumnType("int");

                    b.Property<int>("PlatnaListaId")
                        .HasColumnType("int");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("PlatnaSkladistarID");

                    b.HasIndex("PlatnaListaId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("PlatnaSkladistar");
                });

            modelBuilder.Entity("ConManApp.EnModels.Poslovodja", b =>
                {
                    b.Property<int>("UposlenikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktBroj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpisIskustva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UposlenikId");

                    b.ToTable("Poslovodja");
                });

            modelBuilder.Entity("ConManApp.EnModels.Predracun", b =>
                {
                    b.Property<int>("PredracunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<bool>("JeOdobren")
                        .HasColumnType("bit");

                    b.Property<string>("NazivPredracuna")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjektId")
                        .HasColumnType("int");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("PredracunId");

                    b.HasIndex("ProjektId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("Predracun");
                });

            modelBuilder.Entity("ConManApp.EnModels.PredracunMaterijal", b =>
                {
                    b.Property<int>("PredracunMaterijalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaterijalId")
                        .HasColumnType("int");

                    b.Property<int>("PredracunId")
                        .HasColumnType("int");

                    b.HasKey("PredracunMaterijalId");

                    b.HasIndex("MaterijalId");

                    b.HasIndex("PredracunId");

                    b.ToTable("PredracunMaterijal");
                });

            modelBuilder.Entity("ConManApp.EnModels.Projekt", b =>
                {
                    b.Property<int>("ProjektId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Kraj")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Pocetak")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("ProjektId");

                    b.HasIndex("GradId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("Projekt");
                });

            modelBuilder.Entity("ConManApp.EnModels.ProjektInfo", b =>
                {
                    b.Property<int>("ProjektInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjektId")
                        .HasColumnType("int");

                    b.Property<string>("textInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjektInfoId");

                    b.HasIndex("ProjektId");

                    b.ToTable("ProjektInfo");
                });

            modelBuilder.Entity("ConManApp.EnModels.Radnik", b =>
                {
                    b.Property<int>("UposlenikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktBroj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Zauzet")
                        .HasColumnType("bit");

                    b.Property<string>("info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UposlenikId");

                    b.ToTable("Radnik");
                });

            modelBuilder.Entity("ConManApp.EnModels.RadnikOprema", b =>
                {
                    b.Property<int>("RadnikOpremaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKrajaZaduzivanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumVracanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZaduzivanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("OpremaId")
                        .HasColumnType("int");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.Property<string>("svrhaIznajmljivanja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RadnikOpremaId");

                    b.HasIndex("OpremaId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("RadnikOprema");
                });

            modelBuilder.Entity("ConManApp.EnModels.RadnikProjekt", b =>
                {
                    b.Property<int>("RadnikProjektId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumDodavanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumUklanjanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjektId")
                        .HasColumnType("int");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.Property<string>("pozicijauProjektu")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("RadnikProjektId");

                    b.HasIndex("ProjektId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("RadnikProjekt");
                });

            modelBuilder.Entity("ConManApp.EnModels.RadnikVozilo", b =>
                {
                    b.Property<int>("RadnikVoziloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKrajaZaduzivanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumVracanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZaduzivanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("SvrhaIznajmljivanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.Property<int>("VoziloId")
                        .HasColumnType("int");

                    b.HasKey("RadnikVoziloId");

                    b.HasIndex("UposlenikId");

                    b.HasIndex("VoziloId");

                    b.ToTable("RadnikVozilo");
                });

            modelBuilder.Entity("ConManApp.EnModels.Skladistar", b =>
                {
                    b.Property<int>("UposlenikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktBroj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkladisteId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFaAuth")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UposlenikId");

                    b.HasIndex("SkladisteId");

                    b.ToTable("Skladistar");
                });

            modelBuilder.Entity("ConManApp.EnModels.Skladiste", b =>
                {
                    b.Property<int>("SkladisteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkladisteId");

                    b.HasIndex("GradId");

                    b.ToTable("Skladiste");
                });

            modelBuilder.Entity("ConManApp.EnModels.TipVozila", b =>
                {
                    b.Property<int>("TipVozilaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivTipa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipVozilaId");

                    b.ToTable("TipVozila");
                });

            modelBuilder.Entity("ConManApp.EnModels.Ured", b =>
                {
                    b.Property<int>("UredId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.HasKey("UredId");

                    b.HasIndex("GradId");

                    b.ToTable("Ured");
                });

            modelBuilder.Entity("ConManApp.EnModels.Vlasnik", b =>
                {
                    b.Property<int>("VlasnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VlasnikId");

                    b.ToTable("Vlasnik");
                });

            modelBuilder.Entity("ConManApp.EnModels.Vozilo", b =>
                {
                    b.Property<int>("VoziloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GodinaProizvodnje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("JeIznajmljeno")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivProizvodjaca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkladisteId")
                        .HasColumnType("int");

                    b.Property<byte[]>("SlikaVozila")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("TipVozilaId")
                        .HasColumnType("int");

                    b.HasKey("VoziloId");

                    b.HasIndex("SkladisteId");

                    b.HasIndex("TipVozilaId");

                    b.ToTable("Vozilo");
                });

            modelBuilder.Entity("ConManApp.EnModels.Administracija", b =>
                {
                    b.HasOne("ConManApp.EnModels.Ured", "Ured")
                        .WithMany()
                        .HasForeignKey("UredId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.Grad", b =>
                {
                    b.HasOne("ConManApp.EnModels.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.Materijal", b =>
                {
                    b.HasOne("ConManApp.EnModels.Dobavljac", "Dobavljac")
                        .WithMany()
                        .HasForeignKey("DobavljacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConManApp.EnModels.GrupaMaterijal", "GrupaMaterijal")
                        .WithMany()
                        .HasForeignKey("GrupaMaterijalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConManApp.EnModels.Skladiste", "Skladiste")
                        .WithMany()
                        .HasForeignKey("SkladisteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.Narudzba", b =>
                {
                    b.HasOne("ConManApp.EnModels.Administracija", "Administracija")
                        .WithMany()
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.Oprema", b =>
                {
                    b.HasOne("ConManApp.EnModels.Skladiste", "Skladiste")
                        .WithMany()
                        .HasForeignKey("SkladisteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.PlatnaLista", b =>
                {
                    b.HasOne("ConManApp.EnModels.Administracija", "Administracija")
                        .WithMany()
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.PlatnaPoslovodja", b =>
                {
                    b.HasOne("ConManApp.EnModels.PlatnaLista", "PlatnaLista")
                        .WithMany()
                        .HasForeignKey("PlatnaListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConManApp.EnModels.Poslovodja", "Poslovodja")
                        .WithMany()
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.PlatnaRadnik", b =>
                {
                    b.HasOne("ConManApp.EnModels.PlatnaLista", "PlatnaLista")
                        .WithMany()
                        .HasForeignKey("PlatnaListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConManApp.EnModels.Radnik", "Radnik")
                        .WithMany()
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.PlatnaSkladistar", b =>
                {
                    b.HasOne("ConManApp.EnModels.PlatnaLista", "PlatnaLista")
                        .WithMany()
                        .HasForeignKey("PlatnaListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConManApp.EnModels.Skladistar", "Skladistar")
                        .WithMany()
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.Predracun", b =>
                {
                    b.HasOne("ConManApp.EnModels.Projekt", "Projekt")
                        .WithMany()
                        .HasForeignKey("ProjektId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConManApp.EnModels.Poslovodja", "Poslovodja")
                        .WithMany()
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.PredracunMaterijal", b =>
                {
                    b.HasOne("ConManApp.EnModels.Materijal", "Materijal")
                        .WithMany()
                        .HasForeignKey("MaterijalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConManApp.EnModels.Predracun", "Predracun")
                        .WithMany()
                        .HasForeignKey("PredracunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.Projekt", b =>
                {
                    b.HasOne("ConManApp.EnModels.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConManApp.EnModels.Poslovodja", "Poslovodja")
                        .WithMany()
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.ProjektInfo", b =>
                {
                    b.HasOne("ConManApp.EnModels.Projekt", "Projekt")
                        .WithMany()
                        .HasForeignKey("ProjektId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.RadnikOprema", b =>
                {
                    b.HasOne("ConManApp.EnModels.Oprema", "Oprema")
                        .WithMany()
                        .HasForeignKey("OpremaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConManApp.EnModels.Radnik", "Radnik")
                        .WithMany()
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.RadnikProjekt", b =>
                {
                    b.HasOne("ConManApp.EnModels.Projekt", "Projekt")
                        .WithMany()
                        .HasForeignKey("ProjektId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConManApp.EnModels.Radnik", "Radnik")
                        .WithMany()
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.RadnikVozilo", b =>
                {
                    b.HasOne("ConManApp.EnModels.Radnik", "Radnik")
                        .WithMany()
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConManApp.EnModels.Vozilo", "Vozilo")
                        .WithMany()
                        .HasForeignKey("VoziloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.Skladistar", b =>
                {
                    b.HasOne("ConManApp.EnModels.Skladiste", "Skladiste")
                        .WithMany()
                        .HasForeignKey("SkladisteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.Skladiste", b =>
                {
                    b.HasOne("ConManApp.EnModels.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.Ured", b =>
                {
                    b.HasOne("ConManApp.EnModels.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConManApp.EnModels.Vozilo", b =>
                {
                    b.HasOne("ConManApp.EnModels.Skladiste", "Skladiste")
                        .WithMany()
                        .HasForeignKey("SkladisteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConManApp.EnModels.TipVozila", "TipVozila")
                        .WithMany()
                        .HasForeignKey("TipVozilaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
